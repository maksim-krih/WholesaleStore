@using WholesaleStore.Common.Enums
@using WholesaleStore.Utils
@using PagedList.Mvc;
@model PagedList.IPagedList<WholesaleStore.Models.Dtos.OrderDto>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h2>Delivery</h2>


@using (Html.BeginForm("Delivery", "OrderManager", FormMethod.Get))
{
    <p>
        Find client by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table table-hover">
    <tr>
        <th>
            @Html.ActionLink("Number", "Delivery", new { sortOrder = ViewBag.NumberSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Employee", "Delivery", new { sortOrder = ViewBag.EmployeeSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Client", "Delivery", new { sortOrder = ViewBag.ClientSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Address
        </th>
        <th>
            @Html.ActionLink("Date", "Delivery", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Total Price", "Delivery", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Status", "Delivery", new { sortOrder = ViewBag.StatusSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr data-toggle="collapse" data-target="#@(item.Id)" aria-expanded="false" aria-controls="@item.Id">
            <td>
                @item.Number
            </td>
            <td>
                @item.Employee.FirstName
                @item.Employee.LastName
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Client.FirstName)
                @Html.DisplayFor(modelItem => item.Client.LastName)
            </td>
            <td>
                @if (item.AddressDto != null)
                {
                    <div>
                        @item.AddressDto.ZipCode,
                        @item.AddressDto.City.Region.Country.Name,
                        @item.AddressDto.City.Region.Name,
                        @item.AddressDto.City.Name,
                        @item.AddressDto.Address1
                    </div>
                }
            </td>
            <td>
                @item.Date
            </td>
            <td>
                @item.TotalPrice
            </td>
            <td>
                @(((OrderStatus)item.Status).GetDescription())
            </td>
            <td>
                @if ((OrderStatus)item.Status != OrderStatus.Delivered)
                {
                    @Html.ActionLink("Prepare Delivery", "EditDelivery", new { id = item.Id })
                }
                @if ((OrderStatus)item.Status == OrderStatus.Delivering)
                {
                    <span> | <a class="my-close" name="@item.Id" style="cursor:pointer;">Close</a></span>
                }
            </td>
        </tr>
        <tr id="@item.Id" class="collapse">
            <td colspan="8">
                <table class="table borderless">
                    <tr>
                        <th>
                            Employee
                        </th>
                        <th>
                            Receive Date
                        </th>
                        <th>
                            Delivery Date
                        </th>
                    </tr>
                    <tr>
                        <td>
                            @(item.OrderDeliveries.FirstOrDefault()?.Employee.FirstName)
                            @(item.OrderDeliveries.FirstOrDefault()?.Employee.LastName)
                        </td>
                        <td>
                            @(item.OrderDeliveries.FirstOrDefault()?.ReceiveDate)
                        </td>
                        <td>
                            @(item.OrderDeliveries.FirstOrDefault()?.DeliveryDate)
                        </td>
                    </tr>
                    <tr>
                        <th>
                            Product
                        </th>
                        <th>
                            Count
                        </th>
                        <th>
                            Storage
                        </th>
                    </tr>

                    @foreach (var orderContent in item.OrderContents)
                    {
                        <tr>
                            <td>
                                [@orderContent.Product.Code] @orderContent.Product.Name
                            </td>
                            <td>
                                @orderContent.Count
                            </td>
                            <td>
                                @(orderContent.OrderShipments.FirstOrDefault()?.ProductsInStorage.Storage.Number)
                            </td>
                        </tr>
                    }
                </table>
            </td>
        </tr>
    }
</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Delivery",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

@section Scripts {
    <script type="text/javascript">
        $(".my-close").on('click', function () {
            $.ajax({
                async: true,
                data: { id: this.name },
                type: "POST",
                url: '/OrderManager/CloseDelivery',
                success: function (isSuccess) {
                    if (isSuccess) {
                        window.location.reload();
                    }
                },
                error: function () {
                    alert("error");
                }
            });
        });
        $('tr td:last-child').click(function (e) {
            e.stopPropagation();
        });
    </script>
}